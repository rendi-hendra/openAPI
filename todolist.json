{
  "openapi": "3.0.3",
  "info": {
    "title": "Todolist Restful API",
    "version": "1.0",
    "description": "OpenAPI for Todolist Restful API",
    "termsOfService": "https://www.todolist.com/termsOfService",
    "contact": {
      "name": "Rendi hendra Syahputra",
      "email": "rendi2004@gmail.com",
      "url": "https://api.server.test/contact"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "servers": [
    {
      "description": "API Server",
      "url": "https://api.{envronment}.server.test/v1",
      "variables": {
        "envronment": {
          "description": "Server Environment",
          "default": "dev",
          "enum": ["dev", "qa", "prod"]
        }
      }
    }
  ],
  "externalDocs": {
    "description": "API Documentation",
    "url": "https://api.server.test/docs"
  },
  "paths": {
    "/todolist": {
      "get": {
        "summary": "Get all todolist",
        "description": "Get all active todolist by default",
        "parameters": [
          {
            "name": "include done",
            "in": "query",
            "required": false,
            "description": "Is included done todolist",
            "schema": {
              "type": "boolean",
              "nullable": true,
              "default": false
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Filter todolist by name",
            "schema": {
              "type": "string",
              "nullable": true,
              "minLength": 1,
              "maxLength": 100
            },
            "examples": {
              "java": {
                "description": "Example name java",
                "value": "Java"
              },
              "php": {
                "description": "Example name php",
                "value": "PHP"
              }
            }
          }
        ],
        "responses": {}
      },
      "post": {
        "summary": "Create new todolist",
        "description": "Create new todolist to database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "required": true
                  },
                  "priority": {
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                    "default": 1
                  },
                  "tags": {
                    "type": "array",
                    "required": false,
                    "minItems": 1,
                    "items": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              },
              "examples": {
                "java": {
                  "description": "Example create todolist Java",
                  "value": {
                    "name": "Java",
                    "priority": 3,
                    "tags": ["java", "Programming"]
                  }
                },
                "php": {
                  "description": "Example create todolist PHP",
                  "value": {
                    "name": "PHP",
                    "priority": 5,
                    "tags": ["php", "Programming"]
                  }
                }
              }
            }
          }
        },
        "responses": {}
      }
    },
    "/todolist/{todolistId}": {
      "put": {
        "summary": "Update existing todolist",
        "description": "Update existing todolist to database",
        "parameters": [
          {
            "name": "todolisId",
            "in": "path",
            "required": true,
            "description": "Todolist id for updated",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            },
            "examples": {
              "java": {
                "description": "Sample todolist id for Java",
                "value": "1"
              },
              "php": {
                "description": "Sample todolist id for PHP",
                "value": "2"
              }
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "required": true
                  },
                  "priority": {
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                    "default": 1
                  },
                  "tags": {
                    "type": "array",
                    "required": false,
                    "minItems": 1,
                    "items": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              },
              "examples": {
                "java": {
                  "description": "Example create todolist Java",
                  "value": {
                    "name": "Java",
                    "priority": 3,
                    "tags": ["java", "Programming"]
                  }
                },
                "php": {
                  "description": "Example create todolist PHP",
                  "value": {
                    "name": "PHP",
                    "priority": 5,
                    "tags": ["php", "Programming"]
                  }
                }
              }
            }
          }
        },

        "responses": {}
      },
      "delete": {
        "summary": "Delete todolist",
        "description": "Delete todolist from database",
        "parameters": [
          {
            "name": "todolistId",
            "in": "path",
            "required": true,
            "description": "Todolist id for deleted",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            }
          }
        ],
        "responses": {}
      }
    }
  }
}
